# Alias Command
alias py="python3"
alias sv="sudo nvim"
alias ls="lsd"
alias cat="$(which bat)"
alias grep="$(which rg)"
alias htop="$(which bpytop)"
alias wget="axel -n 16"
alias vimdiff="nvim -d"
alias df="duf"
alias passbolt="/home/laznp/learning/go/bin/go-passbolt-cli"
# Run python3 on every filename with .py extension
alias -s py="python3"
alias v="nvim"

# Shorthand for edit rc files
alias zshrc="nvim ~/.zshrc"
alias zsh_alias="nvim ~/.config/zsh/alias"
alias slack_autobahn="google-chrome-stable --app=https://app.slack.com/client/T02GNBPNLH3/D05RMA27WHE"
alias slack_nebulae="google-chrome-stable --app=https://app.slack.com/client/T5VAKUAMQ/C5ULDD4HW"

# Alias source zshrc
alias reload="source $HOME/.zshrc"

function vim {
  (alacritty --class NeoVim -e nvim $@ >/dev/null 2>&1 &)
}

function nebulae-ssh() {
    eval $(ssh-agent)
    ssh-add ~/.ssh/nebulae
}

# Alias for password generation
function passgen() {
    tr -dc 'A-Za-z0-9' < /dev/urandom | head -c $1 ; echo
}

# Alias reverse proxy with port as arguments
function publish() {
    ssh -nN -R 11227:localhost:"$1" zoelabs
}

# Alias create new python virtualenv
function pyenv() {
    if [ -z "$1" ]; then
        python3 -m venv venv
        source ./venv/bin/activate
    else
        python3 -m venv "$1"
        source ./$1/bin/activate
    fi
}

# Alias activating python virtualenv on directory
function av() {
    if [ -z "$1" ]; then
        source ./venv/bin/activate
    else
        source ./$1/bin/activate
    fi
}

function willow_infra() {
    cd $HOME/Projects/willow/infrastructure
    if [ "$1" = "dev" ]; then
        echo "Change project to lazuardi-dev"
        source projects/lazuardi-dev/environment.sh
        gcloud config configurations activate willow-dev
        bash scripts/download-service-account-credentials.sh
        cd projects/lazuardi-dev
    elif [ "$1" = "unstable" ]; then
        echo "Change project to hellocontento-unstable"
        source projects/hellocontento-unstable/environment.sh
        gcloud config configurations activate willow-unstable
        bash scripts/download-service-account-credentials.sh
        cd projects/hellocontento-unstable
    elif [ "$1" = "staging" ]; then
        echo "Change project to hellocontento-staging"
        source projects/hellocontento-staging/environment.sh
        gcloud config configurations activate willow-stag
        bash scripts/download-service-account-credentials.sh
        cd projects/hellocontento-staging
    elif [ "$1" = "production" ]; then
        echo "Change project to hellocontento-production"
        source projects/hellocontento-prod/environment.sh
        gcloud config configurations activate willow-prod
        bash scripts/download-service-account-credentials.sh
        cd projects/hellocontento-prod
    fi
}

function nebulae_infra() {
    cd $HOME/Projects/nebulae/foodbag/terraform
    if [ "$1" = "dev" ]; then
        source projects/dev/environment.sh
        gcloud config configurations activate nebulae-foodbag-dev
        echo "Change project to Foodbag Dev"
        cd projects/dev
    elif [ "$1" = "prod" ]; then
        source projects/production/environment.sh
        gcloud config configurations activate nebulae-foodbag-prod
        echo "Change project to Foodbag Prod"
        cd projects/production
    fi
}

function autobahn_db() {
    if [ "$1" = "pq" ]; then
        DB_NAME="${2:-postgres}"
        psql -h localhost -U root "$DB_NAME"
    elif [ "$1" = "dwh" ]; then
        DB_NAME="${2:-postgres}"
        psql -h localhost -U root "$DB_NAME" -p 5433
    elif [ "$1" = "mysql" ]; then
        mariadb -uroot -h127.0.0.1 -p
    fi
}

# Alias git command
alias gad="git add"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gcm="git commit -am"
alias gps="git push origin"
alias gpl="git pull origin"
alias gst="git status"
alias gdf="git diff"

# Alias for Arch Linux
alias pacman="sudo pacman"
alias apt="sudo apt"
alias reboot="sudo reboot"
alias tf="terraform"
alias tg="terragrunt"
alias stow="stow -t $HOME"
alias mkdir="mkdir -p"

# Alias Kubectl
alias k="kubectl"
alias kgp="kubectl get pods"
alias kgs="kubectl get svc"
alias kgd="kubectl get deployment"
alias kgi="kubectl get ingress"
alias kgn="kubectl get nodes"
alias kap="kubectl apply"
alias krm="kubectl delete"
alias kgx="kubectl config get-contexts -o name"
alias kcx="kubectl config current-context"
alias kux="kubectl config use-context"

