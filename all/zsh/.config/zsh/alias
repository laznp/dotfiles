# Alias Command
alias py="python3"
alias sv="sudo nvim"
alias ls="lsd"
alias cat="$(which bat)"
alias grep="$(which rg)"
alias htop="$(which bpytop)"
alias wget="axel -n 16"
alias vimdiff="nvim -d"
alias df="duf"
alias -s py="python3"
alias v="nvim"
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"
alias adhoc="nvim /home/laznp/Projects/autobahn/adhoc-task-$(date +'%F')"
alias fzp="paru -Slq | fzf --multi --preview 'paru -Si {1}' | xargs -ro paru -S"
alias man="tldr"

# Shorthand for edit rc files
alias zshrc="nvim ~/.zshrc"
alias zsh_alias="nvim ~/.config/zsh/alias"

alias slack_autobahn="google-chrome-stable --app=https://app.slack.com/client/T02GNBPNLH3/D05RMA27WHE"
alias slack_nebulae="google-chrome-stable --app=https://app.slack.com/client/T5VAKUAMQ/C5ULDD4HW"
alias whatsapp="google-chrome-stable --app=https://web.whatsapp.com"

# Alias source zshrc
alias reload="source $HOME/.zshrc"

function vim {
  (alacritty --class NeoVim -e nvim $@ >/dev/null 2>&1 &)
}

function nebulae-ssh() {
    eval $(ssh-agent)
    ssh-add ~/.ssh/nebulae
}

# Alias for password generation
function passgen() {
    tr -dc 'A-Za-z0-9' < /dev/urandom | head -c $1 ; echo
}

# Alias create new python virtualenv
function pyenv() {
    if [ -z "$1" ]; then
        python3 -m venv venv
        source ./venv/bin/activate
    else
        python3 -m venv "$1"
        source ./$1/bin/activate
    fi
}

# Alias activating python virtualenv on directory
function activate() {
    if [ -z "$1" ]; then
        source ./venv/bin/activate
    else
        source ./$1/bin/activate
    fi
}

function nebulae_infra() {
    cd $HOME/Projects/nebulae/foodbag/terraform
    if [ "$1" = "dev" ]; then
        source projects/dev/environment.sh
        gcloud config set project foodbag-86a44
        echo "Change project to Foodbag Dev"
        cd projects/dev
    elif [ "$1" = "staging" ]; then
        source projects/dev/environment-staging.sh
        gcloud config set project foodbag-86a44
        echo "Change project to Foodbag Dev"
        cd projects/dev
    elif [ "$1" = "prod" ]; then
        source projects/production/environment.sh
        gcloud config set project foodbag-prod
        echo "Change project to Foodbag Prod"
        cd projects/production
    fi
}

function autobahn_db() {
    if [ "$1" = "pq" ]; then
        DB_NAME="${2:-postgres}"
        PGPASSWORD=$(autobahn_db_secret "prod" "postgres") psql -h localhost -U root "$DB_NAME"
    elif [ "$1" = "dwh" ]; then
        PGPASSWORD=$(autobahn_db_secret "prod" "dwh") psql -h localhost -U root datawarehouse -p 5434
    elif [ "$1" = "mysql" ]; then
        mariadb -uroot -h127.0.0.1 -p$(autobahn_db_secret "prod" "mysql") --ssl=false
    fi
}

function autobahn_vpn() {
    if [ "$1" = "up" ]; then
        wg-quick up wg0
    elif [ "$1" = "down" ]; then
        wg-quick down wg0
    else
        echo "Parameter Not Found!!"
    fi
}

function autobahn_db_secret() {
    if [[ "$1" = "dev" || "$1" = "test" ]]; then
        SECRET_PREFIX="$1-hetzner/shared-item/shared-item"
        PROFILE="sso-admin-$1"
    else
        SECRET_PREFIX="$1/shared-item/shared-item"
        PROFILE="sso-admin-$1"
    fi
    if [[ "$2" = "mysql" || "$2" = "postgres" ]]; then
        SECRET_ITEMS="$SECRET_PREFIX/backend-aurora-db-$2"
    else
        SECRET_ITEMS="$SECRET_PREFIX/backend-db-dwh"
    fi
    echo "$(aws secretsmanager get-secret-value --secret-id $SECRET_ITEMS --profile $PROFILE | jq -c '.SecretString | fromjson' | jq -r '.password')"
}

function autobahn() {
    if [ "$1" = "db-secrets" ]; then
        shift
        autobahn_db_secret "$@"
    elif [ "$1" = "db" ]; then
        shift
        autobahn_db "$@"
    elif [ "$1" = "vpn" ]; then
        shift
        autobahn_vpn "$@"
    fi
}
# Alias git command
alias gad="git add"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gcm="git commit -am"
alias gps="git push origin"
alias gpl="git pull origin"
alias gst="git status"
alias gfa="git fetch -a"

# Alias for Arch Linux
alias pacman="sudo pacman"
alias reboot="sudo reboot"
alias tf="terraform"
alias tfa="terraform apply"
alias tg="terragrunt"
alias tga="terragrunt apply"
alias stow="stow -t $HOME"
alias mkdir="mkdir -p"

# Alias Kubectl
alias k="kubectl"
alias kgp="kubectl get pods"
alias kgs="kubectl get svc"
alias kgd="kubectl get deployment"
alias kgi="kubectl get ingress"
alias kgn="kubectl get nodes"
alias kap="kubectl apply"
alias krm="kubectl delete"
alias kux="kubectl config use-context"

# Alias Directory
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias ~="cd ~"

# Alias Project
alias kuman="cd ~/Projects/autobahn/kubernetes-manifest"
alias infra="cd ~/Projects/autobahn/infrastructure"
alias personal="cd ~/Projects/personal"
alias atbhn="cd ~/Projects/autobahn"
alias nebulae="cd ~/Projects/nebulae"

function ce() {
    protonhax run "$(protonhax ls)" ~/.local/share/bottles/bottles/Gaming__157/drive_c/Program\ Files/Cheat\ Engine\ 7.5/Cheat\ Engine.exe
}

